#include <MFRC522v2.h>
#include <MFRC522DriverSPI.h>
#include <MFRC522DriverPinSimple.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>

#define SDA_PIN 16
#define SCL_PIN 4

MFRC522DriverPinSimple ss_pin(5);
MFRC522DriverSPI driver{ss_pin};
MFRC522 mfrc522{driver};
LiquidCrystal_I2C lcd(0x27, 16, 2);

// Define known UIDs and their corresponding names
struct Card {
  byte uid[4];
  const char* name;
};

Card cards[] = {
  {{0x63, 0x46, 0x4B, 0x28}, "Vaithesh"},
  {{0xA3, 0x05, 0x13, 0x2D}, "Ragavan"}  // Replace with actual UID if needed
};

void setup() {
  Serial.begin(115200);
  while (!Serial);

  Wire.begin(SDA_PIN, SCL_PIN); // Initialize I2C on custom pins
  lcd.init();                    // Initialize LCD
  lcd.backlight();
  lcd.setCursor(0, 0);
  lcd.print("Log Management");
  delay(2000);
  lcd.clear();

  mfrc522.PCD_Init();
  Serial.println(F("Scan a card to get its UID..."));
  lcd.setCursor(0, 0);
  lcd.print("Scan your card");
}

void loop() {
  if (!mfrc522.PICC_IsNewCardPresent()) return;
  if (!mfrc522.PICC_ReadCardSerial()) return;

  // Print UID in Serial Monitor
  Serial.print(F("Card UID: "));
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? "0" : "");
    Serial.print(mfrc522.uid.uidByte[i], HEX);
    if (i < mfrc522.uid.size - 1) Serial.print(":");
  }
  Serial.println();

  // Check card
  bool found = false;
  for (byte i = 0; i < sizeof(cards)/sizeof(cards[0]); i++) {
    bool match = true;
    for (byte j = 0; j < mfrc522.uid.size; j++) {
      if (mfrc522.uid.uidByte[j] != cards[i].uid[j]) {
        match = false;
        break;
      }
    }

    if (match) {
      Serial.print("Hello, ");
      Serial.println(cards[i].name);

      // Display on LCD
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Access Granted");
      lcd.setCursor(0, 1);
      lcd.print(cards[i].name);

      found = true;
      delay(2000); // display name for 2 sec
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Scan next card");
      break;
    }
  }

  if (!found) {
    Serial.println("Unknown card");
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Access Denied");
    lcd.setCursor(0, 1);
    lcd.print("Unknown Card");
    delay(2000);
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Scan your card");
  }

  mfrc522.PICC_HaltA();
  delay(1000);
}
